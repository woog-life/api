---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: backend
spec:
  revisionHistoryLimit: 1
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: migrations
          image: {{ .Values.image.migrations }}
          args:
            - migrate
            - -skipCheckForUpdate
          envFrom:
            - configMapRef:
                name: backend-config
          env:
            - name: FLYWAY_URL
              value: jdbc:postgresql://$(POSTGRES_HOSTNAME):5432/$(POSTGRES_DB)
            - name: FLYWAY_USER
              valueFrom:
                configMapKeyRef:
                  name: backend-config
                  key: POSTGRES_USER
            - name: FLYWAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.user }}.{{ .Values.postgres.host }}.credentials.postgresql.acid.zalan.do
                  key: password
      containers:
        - name: app
          image: {{ .Values.image.app }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 10m
              memory: 64Mi
            limits:
              cpu: "1"
              memory: 256Mi
          readinessProbe:
            httpGet:
              port: 8080
              path: /health/ready
          startupProbe:
            httpGet:
              port: 8080
              path: /health/live
          livenessProbe:
            httpGet:
              port: 8080
              path: /health/live
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.user }}.{{ .Values.postgres.host }}.credentials.postgresql.acid.zalan.do
                  key: password
          envFrom:
            - configMapRef:
                name: backend-config
            - secretRef:
                name: backend-secrets
            - secretRef:
                name: woog-secrets
