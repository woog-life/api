name: Workflow
on: [push]

jobs:
  generate:
    name: Code Generation
    runs-on: ubuntu-latest
    container: google/dart:2.12
    steps:
      - name: Check out repo
        uses: actions/checkout@v1
      - name: Initialize Cache
        uses: actions/cache@v2
        with:
          key: ${{ hashFiles('pubspec.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ hashFiles('pubspec.lock') }}-
          path: |
            .dart_tool/
            lib/**/*.g.dart
      - name: Get dependencies
        run: pub get
      - name: Run code generation
        run: pub run build_runner build

  test:
    name: Test
    runs-on: ubuntu-latest
    container: google/dart:2.12
    needs: generate
    steps:
      - name: Check out repo
        uses: actions/checkout@v1
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          key: ${{ hashFiles('pubspec.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ hashFiles('pubspec.lock') }}-
          path: |
            .dart_tool/
            lib/**/*.g.dart
            test/**/*.g.dart
      - name: Run tests
        run: dart test --no-pub

  check_format:
    name: Check Format
    runs-on: ubuntu-latest
    container: google/dart:2.12
    needs: generate
    steps:
      - name: Check out repo
        uses: actions/checkout@v1
      - name: Check bin formatting
        run: dart format test --set-exit-if-changed
      - name: Check lib formatting
        run: dart format lib --set-exit-if-changed
      - name: Check test formatting
        run: dart format test --set-exit-if-changed

  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: google/dart:2.12
    needs: generate
    steps:
      - name: Check out repo
        uses: actions/checkout@v1
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          key: ${{ hashFiles('pubspec.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ hashFiles('pubspec.lock') }}-
          path: |
            .dart_tool/
            lib/**/*.g.dart
            test/**/*.g.dart
      - name: Run Analysis
        run: dart analyze

  push_docker:
    runs-on: ubuntu-latest
    needs:
      - check_format
      - lint
      - test
    steps:
      - uses: actions/checkout@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the tagged Docker image
        run: docker build -t ghcr.io/woog-life/api:latest .
      - name: Push the tagged Docker image
        run: docker push ghcr.io/woog-life/api:latest
