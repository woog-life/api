name: Workflow
on:
  push:
    branches: [ main ]
  pull_request: { }


jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    container: dart:3.0
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Get dependencies
        run: dart pub get
      - name: Run code generation
        run: dart run build_runner build
      - name: Run tests
        run: dart test

  check_format:
    name: Check Format
    runs-on: ubuntu-latest
    container: dart:3.0
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Check bin formatting
        run: dart format bin --set-exit-if-changed
      - name: Check lib formatting
        run: dart format lib --set-exit-if-changed
      - name: Check test formatting
        run: dart format test --set-exit-if-changed

  lint:
    name: Lint
    runs-on: ubuntu-latest
    container: dart:3.0
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Get dependencies
        run: dart pub get
      - name: Run code generation
        run: dart run build_runner build
      - name: Run Analysis
        run: dart analyze --fatal-infos

  build-app-container-image:
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'pull_request'
    needs:
      - check_format
      - lint
      - test
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Build container image
        uses: docker/build-push-action@v4
        with:
          build-args: |
            build=citest
          push: false
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/app:${{ github.sha }}"

  push-migrations-container-image:
    runs-on: ubuntu-latest
    if: success() && github.ref_name == github.event.repository.default_branch
    needs:
      - check_format
      - lint
      - test
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - # Setting up Docker Buildx with docker-container driver is required
        # at the moment to be able to use a subdirectory with Git context
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build container image
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:migrations"
          push: true
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/migrations:${{ github.sha }}"

  push-app-container-image:
    runs-on: ubuntu-latest
    if: success() && github.ref_name == github.event.repository.default_branch
    needs:
      - check_format
      - lint
      - test
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Build container image
        uses: docker/build-push-action@v4
        with:
          build-args: |
            build=${{ github.sha }}
          push: true
          tags: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/app:${{ github.sha }}"

  deploy:
    runs-on: ubuntu-latest
    needs:
      - push-app-container-image
      - push-migrations-container-image
    concurrency: production
    steps:
      - uses: actions/checkout@v3
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Substitute environment variables in values.yaml
        run: "envsubst < values.yaml > values_sub.yaml && mv values_sub.yaml values.yaml"
        env:
          APP_IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/app"
          MIGRATIONS_IMAGE_NAME: "ghcr.io/${{ env.GITHUB_REPOSITORY_OWNER_PART_SLUG }}/${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/migrations"
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      - uses: WyriHaximus/github-action-helm3@v3
        with:
          exec: helm upgrade backend . --install --namespace=wooglife --atomic
          kubeconfig: '${{ secrets.KUBECONFIG_RAW }}'

  clean:
    runs-on: ubuntu-latest
    concurrency: cleanup
    needs: [ deploy ]
    steps:
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Clean up old app container images
        uses: actions/delete-package-versions@v4
        with:
          package-name: ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/app
          package-type: container
          min-versions-to-keep: 10
      - name: Clean up old migrations container images
        uses: actions/delete-package-versions@v4
        with:
          package-name: ${{ env.GITHUB_REPOSITORY_NAME_PART_SLUG }}/migrations
          package-type: container
          min-versions-to-keep: 10
